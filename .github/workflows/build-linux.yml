name: Build (Linux, Multiarch)

on:
  push:
    paths:
      - .github/workflows/build-linux.yml
      - src/**
      - xmake.lua
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        mode: [debug]
        #       mode: [release, debug]
        arch:
#          - os: 'amd64'
#            gcc: 'g++'
          - os: 'arm64'
            gcc: 'g++-aarch64-linux-gnu'
            prefix: 'aarch64-linux-gnu-'
#          - os: 'armhf'
#            gcc: 'g++-14-arm-linux-gnueabihf'
#          - os: 'ppc64el'
#            gcc: 'g++-14-powerpc64le-linux-gnu'
#          - os: 'riscv64'
#            gcc: 'g++-14-riscv64-linux-gnu'
#          - os: 's390x'
#            gcc: 'g++-14-s390x-linux-gnu'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: '2.9.8'

      - name: Setup ubuntu ports
        if: matrix.arch.os != 'amd64'
        run: |
          sudo dpkg --add-architecture ${{ matrix.arch.os }}
          sudo tee /etc/apt/sources.list.d/ubuntu.sources > /dev/null <<EOF
          
          Types: deb
          URIs: mirror+file:/etc/apt/apt-mirrors.txt
          Suites: noble noble-updates noble-backports noble-security
          Components: main universe restricted multiverse
          Architectures: amd64
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

          Types: deb
          URIs: http://ports.ubuntu.com/ubuntu-ports/
          Suites: noble noble-updates noble-backports noble-security
          Components: main restricted universe multiverse
          Architectures: arm64 armhf ppc64el riscv64 s390x
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          
          EOF

          sudo apt-get update

      - name: Setup qt environment
        run: |
          sudo apt-get install qt6-base-dev:${{ matrix.arch.os }}

      - name: Setup build toolchains
        run: |
          sudo apt-get install ${{ matrix.arch.gcc }} clang

      - name: Configure
        run: |
          xmake f -a ${{ matrix.arch.os }} -m ${{ matrix.mode }} -p linux --cross=${{ matrix.arch.prefix }} -v -y

      - name: Build
        run: |
          xmake -v -y

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bedrockmap-linux-${{ matrix.arch.os }}-${{ matrix.mode }}
          path: |
            build/linux/${{ matrix.arch.os }}/${{ matrix.mode }}
